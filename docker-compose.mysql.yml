version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: jaidee-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=jaidee123
      - MYSQL_DATABASE=jaidee_db
      - MYSQL_USER=jaidee_user
      - MYSQL_PASSWORD=jaidee123
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - jaidee-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-ujaidee_user", "-pjaidee123"]
      interval: 10s
      timeout: 5s
      retries: 5

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: jaidee-phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=jaidee_user
      - PMA_PASSWORD=jaidee123
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - jaidee-network

  # Backend Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: jaidee-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=jaidee_user
      - DB_PASSWORD=jaidee123
      - DB_NAME=jaidee_db
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jaidee-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3001
    container_name: jaidee-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - jaidee-network

volumes:
  mysql_data:
    driver: local

networks:
  jaidee-network:
    driver: bridge
