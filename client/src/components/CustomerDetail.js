import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import RentToOwnTable from './RentToOwnTable';
import styles from './CustomerDetail.module.css';

function CustomerDetail() {
  const { customerId } = useParams();
  const [customer, setCustomer] = useState(null);
  const [activeSection, setActiveSection] = useState('overview');
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  useEffect(() => {
    if (customerId) {
      fetch(`http://localhost:3001/api/customers/${customerId}`)
        .then(res => res.json())
        .then(data => setCustomer(data))
        .catch(error => console.error('Error fetching customer details:', error));
    }
  }, [customerId]);

  if (!customer) {
    return <div>Loading...</div>;
  }

  const navigationSections = [
    {
      id: 'overview',
      title: 'OVERVIEW',
      items: [
        { id: 'kpi', label: 'üìä KPI Dashboard', icon: 'üìä' },
        { id: 'personal', label: 'üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•', icon: 'üë§' },
        { id: 'property', label: 'üè† ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô', icon: 'üè†' }
      ]
    },
    {
      id: 'financial',
      title: 'FINANCIAL',
      items: [
        { id: 'financialInfo', label: 'üí≥ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', icon: 'üí≥' },
        { id: 'creditBureau', label: 'üìä Credit Bureau', icon: 'üìä' }
      ]
    },
    {
      id: 'bankAnalysis',
      title: 'BANK ANALYSIS',
      items: [
        { id: 'bankMatching', label: 'üè¶ Bank Matching', icon: 'üè¶' },
        { id: 'selectedBank', label: 'üéØ Selected Bank', icon: 'üéØ' }
      ]
    },
    {
      id: 'loanEstimation',
      title: 'LOAN ESTIMATION',
      items: [
        { id: 'loanTable', label: 'üìà Loan Table', icon: 'üìà' }
      ]
    },
    {
      id: 'rentToOwn',
      title: 'RENT-TO-OWN',
      items: [
        { id: 'rentResults', label: 'üèòÔ∏è Rent Results', icon: 'üèòÔ∏è' },
        { id: 'amortization', label: 'üìã Amortization', icon: 'üìã' }
      ]
    }
  ];

  const handleNavClick = (sectionId) => {
    setActiveSection(sectionId);
    setIsMobileMenuOpen(false);
    
    // Smooth scroll to section
    setTimeout(() => {
      const element = document.getElementById(sectionId);
      if (element) {
        element.scrollIntoView({ behavior: 'smooth' });
      }
    }, 100);
  };

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const formatNumber = (num) => {
    if (num === null || num === undefined || num === '') return '-';
    return parseFloat(num).toLocaleString('en-US');
  };

  const formatPercentage = (value) => {
    if (value === null || value === undefined || value === '' || isNaN(parseFloat(value))) {
      return '-';
    }
    const numValue = parseFloat(value);
    if (numValue === 0) {
      return '0';
    }
    if (numValue <= 1) {
      // If value is decimal (0.5 = 50%), multiply by 100
      return (numValue * 100).toFixed(0);
    } else {
      // If value is already percentage (50), use as is
      return numValue.toFixed(0);
    }
  };

  const translateIndicator = (indicator) => {
    const translations = {
      // Bad Credit indicators
      'creditScore < 680': '‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏Å‡∏≠‡∏£‡πå‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 680',
      'hasProblematicAccountStatus': '‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤',
      'hasOverduePayments': '‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤',
      
      // Enhanced Bad Income indicators
      'criticallyLowIncome': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≥‡∏°‡∏≤‡∏Å (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 15,000 ‡∏ö‡∏≤‡∏ó)',
      'lowIncome': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≥ (15,000-24,999 ‡∏ö‡∏≤‡∏ó)',
      'belowAverageIncome': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå (25,000-39,999 ‡∏ö‡∏≤‡∏ó)',
      'excessiveDebtBurden': '‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (DSR > 80%)',
      'highDebtBurden': '‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏π‡∏á (DSR 60-80%)',
      'moderateDebtBurden': '‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (DSR 40-60%)',
      'unstableIncomeSource': '‡πÅ‡∏´‡∏•‡πà‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á (‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡∏≠‡∏¥‡∏™‡∏£‡∏∞)',
      'privateBusinessOwner': '‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
      'temporaryEmployment': '‡∏á‡∏≤‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á',
      'insufficientIncomeForProperty': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
      
      // Legacy Bad Income indicators (for backward compatibility)
      'unstableIncome': '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á (‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡∏≠‡∏¥‡∏™‡∏£‡∏∞)',
      
      // Bad Confidence indicators
      'pastCreditIssues': '‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï',
      'currentFinancialStress': '‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô'
    };
    
    return translations[indicator] || indicator;
  };

  const translateSeverity = (severity) => {
    const translations = {
      'high': '‡∏™‡∏π‡∏á',
      'medium': '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á', 
      'low': '‡∏ï‡πà‡∏≥',
      'none': '‡πÑ‡∏°‡πà‡∏°‡∏µ'
    };
    
    return translations[severity] || severity;
  };

  return (
    <div className={styles.detailContainer}>
      {/* Mobile Menu Toggle */}
      <button className={styles.mobileMenuToggle} onClick={toggleMobileMenu}>
        ‚ò∞
      </button>
      
      {/* Sidebar Overlay for Mobile */}
      <div 
        className={`${styles.sidebarOverlay} ${isMobileMenuOpen ? styles.open : ''}`}
        onClick={() => setIsMobileMenuOpen(false)}
      />
      
      {/* Sidebar */}
      <div className={`${styles.sidebar} ${isMobileMenuOpen ? styles.open : ''}`}>
        <div className={styles.sidebarContent}>
          <div className={styles.sidebarTitle}>
            {customer.name}
          </div>
          
          {navigationSections.map((section) => (
            <div key={section.id} className={styles.navSection}>
              <div className={styles.navSectionTitle}>{section.title}</div>
              {section.items.map((item) => (
                <div
                  key={item.id}
                  className={`${styles.navItem} ${activeSection === item.id ? styles.active : ''}`}
                  onClick={() => handleNavClick(item.id)}
                >
                  {item.label}
                </div>
              ))}
            </div>
          ))}
          
          <div className={styles.navSection}>
            <div className={styles.navSectionTitle}>ACTIONS</div>
            <Link 
              to={`/edit-customer/${customerId}`} 
              className={styles.navItem}
            >
              ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </Link>
            <Link 
              to="/" 
              className={styles.navItem}
            >
              üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
            </Link>
          </div>
        </div>
      </div>
      
      {/* Main Content */}
      <div className={styles.contentWrapper}>
        <div className={styles.header}>
          <h1>
            {customer.name}
            <span>‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏î‡∏¢: {customer.officer}</span>
          </h1>
        </div>

        {/* KPI Dashboard Section */}
        <div id="kpi" className={styles.section}>
          <div className={styles.kpiGrid}>
            <div className={styles.kpiCard}>
              <div className={styles.value}>{customer.potentialScore || 0}%</div>
              <div className={styles.label}>Potential Score</div>
              <div className={styles.subtitle}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û</div>
            </div>
            <div className={styles.kpiCard}>
              <div className={styles.value}>{customer.degreeOfOwnership || 0}%</div>
              <div className={styles.label}>Ownership</div>
              <div className={styles.subtitle}>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á</div>
            </div>
            <div className={styles.kpiCard}>
              <div className={styles.value}>{customer.actionPlanProgress || 0}%</div>
              <div className={styles.label}>Plan Progress</div>
              <div className={styles.subtitle}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ú‡∏ô</div>
            </div>
          </div>
        </div>

        <div className={styles.mainContent}>
          <div className={styles.leftColumn}>
            <div className={styles.infoSection}>
              <h2>üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</h2>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡∏≠‡∏≤‡∏¢‡∏∏</label><p>{customer.age ? `${customer.age} ‡∏õ‡∏µ` : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p></div>
                <div className={styles.infoGroup}><label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label><p>{customer.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p></div>
              </div>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</label><p>{customer.job}</p></div>
                <div className={styles.infoGroup}><label>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label><p>{customer.position}</p></div>
              </div>
              {customer.businessOwnerType === '‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß' && (
                <div className={styles.infoGroup}><label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</label><p>{customer.privateBusinessType}</p></div>
              )}
            </div>

            <div className={styles.infoSection}>
              <h2>üè† ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô</h2>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</label><p>{customer.projectName}</p></div>
                <div className={styles.infoGroup}><label>‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á</label><p>{customer.unit || customer.roomNumber}</p></div>
              </div>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå</label><p>{formatNumber(customer.propertyValue)} ‡∏ö‡∏≤‡∏ó</p></div>
                <div className={styles.infoGroup}><label>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</label><p>{customer.paymentHistory}</p></div>
              </div>
            </div>
          </div>

          <div className={styles.rightColumn}>
            <div className={styles.infoSection}>
              <h2>üí≥ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠</h2>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</label><p>{formatNumber(customer.income)} ‡∏ö‡∏≤‡∏ó</p></div>
                <div className={styles.infoGroup}><label>‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</label><p>{formatNumber(customer.debt)} ‡∏ö‡∏≤‡∏ó</p></div>
              </div>
              <div className={styles.infoGroupGrid}>
                <div className={styles.infoGroup}><label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</label><p>{customer.financialStatus}</p></div>
                <div className={styles.infoGroup}><label>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏¢‡∏∑‡πà‡∏ô‡∏Å‡∏π‡πâ</label><p>{customer.targetDate ? new Date(customer.targetDate).toLocaleDateString('th-TH') : '-'}</p></div>
              </div>
              <div className={styles.infoGroup}><label>‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠</label>
                {customer.loanProblem && customer.loanProblem.length > 0 ? (
                  <ul>
                    {customer.loanProblem.map((problem, index) => (
                      <li key={index}>{problem}</li>
                    ))}
                  </ul>
                ) : (
                  <p>‡πÑ‡∏°‡πà‡∏°‡∏µ</p>
                )}
              </div>
              <div className={styles.infoGroup}><label>‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</label>
                {customer.actionPlan && customer.actionPlan.length > 0 ? (
                  <ul>
                    {customer.actionPlan.map((plan, index) => (
                      <li key={index}>{plan}</li>
                    ))}
                  </ul>
                ) : (
                  <p>‡πÑ‡∏°‡πà‡∏°‡∏µ</p>
                )}
              </div>
            </div>
          </div>
        </div>

        {/* Credit Bureau Analysis Section */}
        <div id="creditBureau" className={styles.section}>
        {customer.creditBureauAnalysis ? (
        <div className={styles.creditBureauSection}>
          <h2>üìä Credit Bureau Analysis</h2>
          
          <div className={styles.creditSummary}>
            <div className={styles.creditCard}>
              <h3>‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏Å‡∏≠‡∏£‡πå</h3>
              <div className={styles.creditScore}>
                <span className={styles.scoreNumber}>
                  {customer.creditBureauAnalysis.creditInterpretation.score || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}
                </span>
                <span className={styles.creditGrade}>
                  {customer.creditBureauAnalysis.creditInterpretation.grade || ''}
                </span>
              </div>
              <div className={styles.creditStatus}>
                {customer.creditBureauAnalysis.creditInterpretation.status}
              </div>
            </div>
            
            <div className={styles.livnexCard}>
              <h3>LivNex Recommendation</h3>
              <div className={styles.livnexEligible}>
                {customer.creditBureauAnalysis.livnexCompatibility.eligible ? 
                  '‚úÖ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°' : 
                  '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ'}
              </div>
              {customer.creditBureauAnalysis.livnexCompatibility.eligible && (
                <div className={styles.livnexDetails}>
                  <div>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {customer.creditBureauAnalysis.livnexCompatibility.duration} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</div>
                  <div>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: {customer.creditBureauAnalysis.livnexCompatibility.priority}</div>
                </div>
              )}
            </div>
          </div>

          <div className={styles.problemsAnalysis}>
            <h3>3B Problems Analysis</h3>
            <div className={styles.problemsGrid}>
              <div className={styles.problemCard}>
                <h4>Bad Credit (‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏î‡∏µ)</h4>
                <div className={`${styles.severityBadge} ${styles[customer.creditBureauAnalysis.problems3B.badCredit.severity]}`}>
                  {translateSeverity(customer.creditBureauAnalysis.problems3B.badCredit.severity)}
                </div>
                <ul>
                  {customer.creditBureauAnalysis.problems3B.badCredit.indicators.map((indicator, index) => (
                    <li key={index}>{translateIndicator(indicator)}</li>
                  ))}
                </ul>
              </div>
              
              <div className={styles.problemCard}>
                <h4>Bad Income (‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏î‡∏µ)</h4>
                <div className={`${styles.severityBadge} ${styles[customer.creditBureauAnalysis.problems3B.badIncome.severity]}`}>
                  {translateSeverity(customer.creditBureauAnalysis.problems3B.badIncome.severity)}
                </div>
                <ul>
                  {customer.creditBureauAnalysis.problems3B.badIncome.indicators.map((indicator, index) => (
                    <li key={index}>{translateIndicator(indicator)}</li>
                  ))}
                </ul>
              </div>
              
              <div className={styles.problemCard}>
                <h4>Bad Confidence (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÑ‡∏°‡πà‡∏î‡∏µ)</h4>
                <div className={`${styles.severityBadge} ${styles[customer.creditBureauAnalysis.problems3B.badConfidence.severity]}`}>
                  {translateSeverity(customer.creditBureauAnalysis.problems3B.badConfidence.severity)}
                </div>
                <ul>
                  {customer.creditBureauAnalysis.problems3B.badConfidence.indicators.map((indicator, index) => (
                    <li key={index}>{translateIndicator(indicator)}</li>
                  ))}
                </ul>
              </div>
            </div>
          </div>

          {customer.creditBureauAnalysis.livnexCompatibility.recommendations && (
            <div className={styles.recommendationsSection}>
              <h3>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h3>
              <ul className={styles.recommendationsList}>
                {customer.creditBureauAnalysis.livnexCompatibility.recommendations.map((rec, index) => (
                  <li key={index}>{rec}</li>
                ))}
              </ul>
            </div>
          )}
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Credit Bureau Analysis</p>
          </div>
        )}
        </div>


        {/* Loan Table Section */}
        <div id="loanTable" className={styles.section}>
        {customer.loanEstimation && customer.targetBank ? (
        <div className={styles.loanTable}>
          <h2>‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡πÑ‡∏î‡πâ (‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£: {customer.targetBank})</h2>
          <table>
            <thead>
              <tr>
                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ (‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)</th>
                {[40, 30, 20, 10].map(term => (
                  <th key={term}>‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ({term} ‡∏õ‡∏µ)</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {customer.loanEstimation.map((scenario, index) => {
                // LTV limit: ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ LTV ‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                let ltvValue = parseFloat(customer.ltv) || 1.0;
                let ltvLimit;
                
                // ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ LTV:
                // 1 = 100% (‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 1)
                // 0.9 = 90% (‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 2 ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏õ‡∏µ)
                // 0.8 = 80% (‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 2 ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏õ‡∏µ)
                // 0.7 = 70% (‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 3+)
                if (ltvValue >= 0.5 && ltvValue <= 1.0) {
                  // ‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0.5-1.0 ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ decimal
                  ltvLimit = ltvValue;
                } else if (ltvValue > 1 && ltvValue <= 100) {
                  // ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 100 ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
                  ltvLimit = ltvValue / 100;
                } else {
                  // ‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 100%
                  ltvLimit = 1.0;
                }
                
                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
                const propertyPrice = parseFloat(customer.propertyPrice) || parseFloat(customer.propertyValue) || 0;
                const discount = parseFloat(customer.discount) || 0;
                const propertyAfterDiscount = propertyPrice - discount;
                
                return (
                  <tr key={index}>
                    <td>{scenario.label} ({formatNumber(scenario.debt)})</td>
                    {[40, 30, 20, 10].map(term => {
                      const amount = scenario.loanAmounts[term];
                      // ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏à‡∏£‡∏¥‡∏á = min(‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ, propertyAfterDiscount * LTV)
                      let maxLoan = amount;
                      if (amount !== 'N/A' && amount !== null && amount !== undefined && !isNaN(amount)) {
                        const ltvMax = propertyAfterDiscount * ltvLimit;
                        maxLoan = Math.min(parseFloat(amount), ltvMax);
                      }
                      return (
                        <td key={term}>
                          {amount === 'N/A' || amount === null || amount === undefined ? '-' : formatNumber(maxLoan)}
                        </td>
                      );
                    })}
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô</p>
          </div>
        )}
        </div>

        {/* Rent Results Section */}
        <div id="rentResults" className={styles.section}>
        {customer.detailedRentToOwnEstimation ? (
        <div className={styles.loanTable}>
          <h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏≠‡∏°</h2>
          <table>
            <thead>
              <tr>
                <th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                <th>‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤ (THB)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.propertyAfterDiscount)}</td>
              </tr>
              <tr>
                <td>‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.monthlyRent)}</td>
              </tr>
              <tr>
                <td>‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.totalPaid)}</td>
              </tr>
              <tr>
                <td>‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.guarantee)}</td>
              </tr>
              <tr>
                <td>‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.prepaidRent)}</td>
              </tr>
              <tr>
                <td>‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏™‡∏±‡∏ç‡∏ç‡∏≤</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.additionalPayment)}</td>
              </tr>
              <tr>
                <td>‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡πÇ‡∏≠‡∏ô</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.transferFee)}</td>
              </tr>
              <tr>
                <td>‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°‡∏™‡∏∞‡∏™‡∏°</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.accumulatedSavings)}</td>
              </tr>
              <tr>
                <td>‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</td>
                <td>{formatNumber(customer.detailedRentToOwnEstimation.remainingPrincipal)}</td>
              </tr>
            </tbody>
          </table>
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏≠‡∏°</p>
          </div>
        )}
        </div>

        {/* Amortization Section */}
        <div id="amortization" className={styles.section}>
        {customer.detailedRentToOwnEstimation && customer.detailedRentToOwnEstimation.amortizationTable && customer.detailedRentToOwnEstimation.amortizationTable.length > 0 ? (
        <div className={styles.amortizationSection}>
          <h2>üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞</h2>
          <RentToOwnTable data={customer.detailedRentToOwnEstimation.amortizationTable} />
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞</p>
          </div>
        )}
        </div>

        {/* Enhanced Bank Matching Section */}
        <div id="bankMatching" className={styles.section}>
        {customer.enhancedBankMatching && Object.keys(customer.enhancedBankMatching).length > 0 ? (
        <div className={styles.bankMatchingSection}>
          <h2>üè¶ Enhanced Bank Matching Analysis</h2>
          <div className={styles.bankMatchingGrid}>
            {Object.entries(customer.enhancedBankMatching).map(([bankName, data]) => (
              <div key={bankName} className={`${styles.bankCard} ${styles[data.eligibility]}`}>
                <div className={styles.bankHeader}>
                  <h3>{data.bankName || bankName}</h3>
                  <div className={styles.partnershipBadge}>
                    {data.partnership === 'Government_Backing' ? '‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•' : 
                     data.partnership === 'Premium_Commercial' ? '‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°' : 
                     data.partnership === 'Standard_Commercial' ? '‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô' : 
                     data.partnership === 'LivNex_Primary' ? 'LivNex' : data.partnership}
                  </div>
                </div>
                
                <div className={styles.bankScore}>
                  <div className={styles.totalScore}>
                    <span className={styles.scoreNumber}>{data.totalScore}</span>
                    <span className={styles.scoreLabel}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°</span>
                  </div>
                  <div className={styles.scoreBar}>
                    <div 
                      className={styles.scoreProgress}
                      style={{width: `${data.totalScore}%`}}
                    ></div>
                  </div>
                </div>

                <div className={styles.componentScores}>
                  <div className={styles.componentScore}>
                    <span className={styles.componentLabel}>Loan Band</span>
                    <span className={styles.componentValue}>{data.componentScores.loanBand}</span>
                  </div>
                  <div className={styles.componentScore}>
                    <span className={styles.componentLabel}>Rent-to-Own</span>
                    <span className={styles.componentValue}>{data.componentScores.rentToOwn}</span>
                  </div>
                  <div className={styles.componentScore}>
                    <span className={styles.componentLabel}>Credit Bureau</span>
                    <span className={styles.componentValue}>{data.componentScores.creditBureau}</span>
                  </div>
                </div>

                <div className={styles.bankDetails}>
                  <div className={styles.detailRow}>
                    <span className={styles.detailLabel}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</span>
                    <span className={`${styles.eligibilityStatus} ${styles[data.eligibility]}`}>
                      {data.eligibility === 'eligible' ? '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå'}
                    </span>
                  </div>
                  <div className={styles.detailRow}>
                    <span className={styles.detailLabel}>‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:</span>
                    <span className={styles.detailValue}>{data.approvalProbability}</span>
                  </div>
                  <div className={styles.detailRow}>
                    <span className={styles.detailLabel}>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</span>
                    <span className={styles.detailValue}>{data.estimatedApprovalTime}</span>
                  </div>
                </div>

                {data.creditBureauInsights && (
                  <div className={styles.creditInsights}>
                    <h4>Credit Bureau Insights</h4>
                    <div className={styles.insightRow}>
                      <span className={styles.insightLabel}>‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏Å‡∏£‡∏î:</span>
                      <span className={styles.insightValue}>{data.creditBureauInsights.creditGrade}</span>
                    </div>
                    <div className={styles.insightRow}>
                      <span className={styles.insightLabel}>LivNex:</span>
                      <span className={styles.insightValue}>{data.creditBureauInsights.livnexRecommendation}</span>
                    </div>
                  </div>
                )}

                {data.customerAnalysis && (
                  <div className={styles.customerAnalysis}>
                    <h4>‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h4>
                    <div className={styles.analysisGrid}>
                      <div className={styles.analysisCard}>
                        <div className={styles.analysisLabel}>DSR ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</div>
                        <div className={styles.analysisValue}>
                          {data.customerAnalysis.currentDSR !== 'N/A' ? 
                            `${data.customerAnalysis.currentDSR}%` : 'N/A'}
                        </div>
                        <div className={`${styles.analysisStatus} ${
                          data.customerAnalysis.dsrStatus.includes('‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå') ? styles.pass : 
                          data.customerAnalysis.dsrStatus === '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ' ? styles.nodata : styles.fail
                        }`}>
                          {data.customerAnalysis.dsrStatus}
                        </div>
                      </div>
                      <div className={styles.analysisCard}>
                        <div className={styles.analysisLabel}>LTV ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</div>
                        <div className={styles.analysisValue}>
                          {data.customerAnalysis.requestedLTV > 0 ? 
                            `${data.customerAnalysis.requestedLTV}%` : 'N/A'}
                        </div>
                        <div className={`${styles.analysisStatus} ${
                          data.customerAnalysis.ltvStatus === '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå' ? styles.pass : 
                          data.customerAnalysis.ltvStatus === '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' ? styles.nodata : styles.fail
                        }`}>
                          {data.customerAnalysis.ltvStatus}
                        </div>
                      </div>
                      <div className={styles.analysisCard}>
                        <div className={styles.analysisLabel}>‡∏≠‡∏≤‡∏¢‡∏∏</div>
                        <div className={styles.analysisValue}>
                          {data.customerAnalysis.customerAge || customer.age || 'N/A'} {data.customerAnalysis.customerAge || customer.age ? '‡∏õ‡∏µ' : ''}
                        </div>
                        <div className={`${styles.analysisStatus} ${
                          data.customerAnalysis.ageStatus === '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå' ? styles.pass : 
                          data.customerAnalysis.ageStatus === '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' ? styles.nodata : styles.fail
                        }`}>
                          {data.customerAnalysis.ageStatus}
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                <div className={styles.recommendedTerms}>
                  <h4>‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</h4>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏≠‡∏°:</span>
                    <span className={styles.termValue}>{data.recommendedTerms.interestRate}%</span>
                  </div>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>LTV ‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏≠‡∏°:</span>
                    <span className={styles.termValue}>{data.recommendedTerms.maxLTV}%</span>
                  </div>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏≠‡∏°:</span>
                    <span className={styles.termValue}>{data.recommendedTerms.maxTerm} ‡∏õ‡∏µ</span>
                  </div>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>DSR ‡∏™‡∏π‡∏á:</span>
                    <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.dsrHigh)}%</span>
                  </div>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>DSR ‡∏ï‡πà‡∏≥:</span>
                    <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.dsrLow)}%</span>
                  </div>
                  <div className={styles.termRow}>
                    <span className={styles.termLabel}>‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏:</span>
                    <span className={styles.termValue}>{data.recommendedTerms.ageRange} ‡∏õ‡∏µ</span>
                  </div>
                  <div className={styles.termSection}>
                    <h5>‡πÄ‡∏Å‡∏ì‡∏ë‡πå LTV ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô</h5>
                    <div className={styles.termRow}>
                      <span className={styles.termLabel}>‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 1:</span>
                      <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.ltvType1)}%</span>
                    </div>
                    <div className={styles.termRow}>
                      <span className={styles.termLabel}>‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 2 (&gt;2‡∏õ‡∏µ):</span>
                      <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.ltvType2Over2Years)}%</span>
                    </div>
                    <div className={styles.termRow}>
                      <span className={styles.termLabel}>‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 2 (&lt;2‡∏õ‡∏µ):</span>
                      <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.ltvType2Under2Years)}%</span>
                    </div>
                    <div className={styles.termRow}>
                      <span className={styles.termLabel}>‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà 3+:</span>
                      <span className={styles.termValue}>{formatPercentage(data.recommendedTerms.ltvType3)}%</span>
                    </div>
                  </div>
                </div>

                {data.specialPrograms && data.specialPrograms.length > 0 && (
                  <div className={styles.specialPrograms}>
                    <h4>‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©</h4>
                    <ul>
                      {data.specialPrograms.map((program, index) => (
                        <li key={index}>{program}</li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Bank Matching</p>
          </div>
        )}
        </div>

        {/* Selected Bank Section */}
        <div id="selectedBank" className={styles.section}>
        {customer.selectedBank && customer.recommendedLoanTerm && customer.recommendedInstallment ? (
        <div className={styles.selectedBankSection}>
          <h2>üéØ ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠</h2>
          <div className={styles.infoSection}>
            <div className={styles.infoGroup}><label>‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</label><p>{customer.selectedBank}</p></div>
            <div className={styles.infoGroup}><label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</label><p>{customer.recommendedLoanTerm} ‡∏õ‡∏µ</p></div>
            <div className={styles.infoGroup}><label>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</label><p>{customer.recommendedInstallment} ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</p></div>
          </div>
        </div>
        ) : (
          <div className={styles.noData}>
            <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</p>
          </div>
        )}
        </div>

        <div className={styles.footerButtons}>
          <Link to="/" className={styles.editButton}>‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</Link>
        </div>
      </div>
    </div>
  );
}

export default CustomerDetail;
